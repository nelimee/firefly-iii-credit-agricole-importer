#######################################################
# EXAMPLE RULE FILE
#######################################################
# Every value after ":" is treated as a string.
# Each string can include {key} substrings, in which
# case "key" should exist in the InformationContainer
# that follows the rules application.
# The only exception to this are the keys:
# - priority that is interpreted as an integer.
# - condition that is given as is to rule_engine.
# The available keys and their meaning will be listed
# latter.

#######################################################
# GENERIC RULES
#######################################################
# These rules have a priority of 1, meaning that they
# are applied first and the values they set **might**
# be overriden by higher priority rules.

# Any transfer that represent incoming money came from
# the account represented by the description of the
# transfer.
[Incoming money]
priority: 1
condition: amount > 0
type: deposit
source: {description}
destination: {linked_account}

[Outgoing money]
priority: 1
condition: amount < 0
type: withdrawal
source: {linked_account}
destination: {description}

# Rule without any effect for the moment: it can be
# matched, but it does not change the
# InformationContainer instance as it contains no
# key other than "priority" and "condition".
[Card operation]
priority: 2
condition: operation_type =~ "PAIEMENT PAR CARTE.*"

[Boursorama]
priority: 2
condition: description =~ "WEB Boursorama"
destination: Compte personnel Boursorama

[Cash machine]
priority: 2
condition: operation_type =~ "RETRAIT AU DISTRIBUTEUR.*"
# Empty destination is a special target for Firefly, see
# https://docs.firefly-iii.org/firefly-iii/concepts/tracking_cash/
# Here the destination of the transaction will be replaced by "".
destination: 
category: Retrait cash

[Too Good To Go]
priority: 1000
condition: description =~ "TooGoodToG .*"
destination: Too Good To Go
category: Nourriture
tags: restaurant, à emporter

[Fondation Abbé Pierre]
priority: 1000
# Check rule_engine syntax for more:
# https://zerosteiner.github.io/rule-engine/index.html
condition: description == "FAP" and notes == "FONDATION ABBE PIERRE"
destination: Fondation Abbé Pierre
category: Don
tags: charité, association

[SNCF]
priority: 1000
condition: description =~ ".*SNCF.*" and amount < 0
destination: SNCF
category: Voyages
tags: train

[SNCF remboursement]
priority: 1000
condition: description =~ ".*SNCF.*" and amount > 0
source: SNCF
category: Voyages
tags: train, remboursement

# Transactions that match this rule have already
# matched with "SNCF" (because Selecta never had to
# reimburse me so the amount should be negative).
# The priority of this rule is higher than "SNCF"
# so the values set by this rule will override
# the values set by the rule "SNCF".
[SNCF Selecta]
priority: 1001
condition: description =~ "SELECTA FR SNCF.*"
# Replacing the destination.
destination: Selecta SNCF
# Replacing the category.
category: Nourriture
# **APPENDING** the café tag to the ones already set
# by the rules that already matched.
tags: café

# Rules do not have to be sorted by priority in this
# file.
[CAF incoming]
priority: 1000
condition: description =~ "CAF.*" and amount < 0
destination: CAF
category: Aides Sociales

[CAF outgoing]
priority: 1000
condition: description =~ "CAF.*" and amount > 0
source: CAF
category: Remboursements